// app/lib/mailer.ts
import nodemailer from "nodemailer";

// Create a reusable transporter object (this is more efficient than creating it in every function)
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: Number(process.env.SMTP_PORT),
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
});
export const sendMail = async (to: string, subject: string, code: string) => {
  const html = `Your verification code is: <b>${code}</b>`; // Example HTML
  await transporter.sendMail({
    from: process.env.SMTP_FROM,
    to,
    subject,
    html,
  });
};
export const sendAttendanceQrEmail = async (
    to: string, 
    subjectName: string, 
    teacherName: string, 
    qrCodeDataUrl: string
) => {
  const base64Data = qrCodeDataUrl.split(';base64,').pop();

  const mailOptions = {
    from: process.env.SMTP_FROM,
    to: to,
    subject: `Attendance QR Code for ${subjectName}`,
    html: `
        <div style="font-family: Arial, sans-serif; text-align: center; color: #333;">
            <h2>Attendance for ${subjectName}</h2>
            <p>Hello Student,</p>
            <p>Please use the QR code below to mark your attendance. This code is valid for 10 minutes.</p>
            <p>Generated by: ${teacherName}</p>
            <div style="padding: 20px;">
                <img src="cid:attendance-qr" alt="Attendance QR Code" style="border: 1px solid #ddd; padding: 5px;"/>
            </div>
            <p style="font-size: 12px; color: #777;">If you have trouble scanning, please contact ClassifyAI-team.</p>
        </div>
    `,
    attachments: [
      {
        filename: 'qrcode.png',
        content: base64Data,
        encoding: 'base64',
        cid: 'attendance-qr'
      }
    ]
  };
  
  await transporter.sendMail(mailOptions);
};